@csrf_exempt
def receive_data(request):
    if request.method == 'POST':
        try:
            data = json.loads(request.body)
            # Process and save data to the database
            print("Received data:", data)
            return JsonResponse({"status": "success", "message": "Data received"})
        except Exception as e:
            return JsonResponse({"status": "error", "message": str(e)}, status=400)
    return JsonResponse({"status": "error", "message": "Invalid request method"}, status=405)


path('api/receive-data/', receive_data, name='receive_data'),





class ReceiveDataView(APIView):
    def post(self, request, *args, **kwargs):
        try:
            # Parse JSON data from the request body
            data = request.data
            print("Received data:", data)

            # Process and save data to the database (add your logic here)

            # Return a success response
            return Response({"status": "success", "message": "Data received"}, status=status.HTTP_200_OK)
        except Exception as e:
            # Return an error response if something goes wrong
            return Response({"status": "error", "message": str(e)}, status=status.HTTP_400_BAD_REQUEST)

    path('api/receive-data/', ReceiveDataView.as_view(), name='receive_data'),




Failed to send data. Response code: 400
Error response: {"status":"error","message":"JSON parse error - Expecting value: line 1 column 77 (char 76)"}

@method_decorator(csrf_exempt, name='dispatch')

from django.utils.decorators import method_decorator
from django.views.decorators.csrf import csrf_exempt












@method_decorator(csrf_exempt, name='dispatch')
class ReceiveDataView(APIView):
    def post(self, request, *args, **kwargs):
        try:
            data = request.data
            print("Received data:", data)
            os_name = data.get("OS")
            os_version = data.get("version")
            os_architecture = data.get("osArch")
            service = data.get("services", [])

            print(f"OS: {os_name}")
            print(f"Version: {os_version}")
            print(f"Architecture: {os_architecture}")
            print(f"Services: {service}")


            return Response({
                "status": "success",
                "message": "Data received",
                "data": {
                    "OS": os_name,
                    "version": os_version,
                    "osArch": os_architecture,
                    "services": service

                }
            }, status=status.HTTP_200_OK)

        except Exception as e:
            return Response({
                "status": "error",
                "message": str(e)
            }, status=status.HTTP_400_BAD_REQUEST)






Sending JSON: {"OS":"Linux","version":"6.8.0-52-generic","osArch":"amd64","services":["00:00:11","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:03","00:00:00","00:00:00","00:00:00","00:00:00","00:00:05","00:00:56","00:00:01","00:00:00","00:00:00","00:00:00","00:00:00","00:00:02","00:00:03","00:00:00","00:00:00","00:00:02","00:00:04","00:00:00","00:00:00","00:00:02","00:00:10","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:21","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:01:26","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:15","00:00:00","00:00:08","00:00:01","00:00:00","00:00:48","00:00:31","00:00:01","00:00:10","00:00:08","00:00:00","00:00:01","00:00:00","00:00:15","00:00:03","00:00:00","00:00:00","00:00:01","00:00:02","00:00:00","00:00:22","00:00:00","00:00:01","00:00:00","00:00:00","00:00:00","00:00:00","00:00:54","00:00:00","00:00:00","00:00:00","00:00:00","00:00:05","00:00:00","00:00:02","00:00:01","00:00:00","00:00:07","00:00:01","00:00:00","00:00:08","00:00:00","00:00:26","00:00:00","00:00:04","00:00:06","00:00:02","00:00:23","00:00:03","00:00:02","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:01","00:00:00","00:57:18","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:02:55","00:00:00","00:00:00","00:00:00","00:00:02","00:00:00","00:00:01","00:00:00","00:00:00","00:00:00","00:00:00","00:00:01","00:00:00","00:00:00","00:00:00","00:00:00","00:00:01","00:00:00","00:00:00","00:00:43","00:00:01","00:00:01","00:00:00","00:00:01","00:00:00","00:00:06","00:00:00","00:00:00","00:00:00","00:00:00","00:00:41","00:00:00","00:00:00","00:00:00","00:00:06","00:00:13","00:00:04","00:00:00","00:00:00","00:00:04","00:11:05","00:00:00","00:00:00","00:00:00","00:00:00","00:08:03","00:00:03","00:00:02","00:01:13","00:15:06","00:00:28","00:19:16","00:01:57","00:00:59","00:01:06","00:07:36","00:00:00","00:00:00","00:06:32","00:00:06","00:50:20","00:01:15","00:05:00","00:00:00","00:00:39","00:09:40","00:00:01","00:00:06","00:00:00","01:14:48","00:00:01","00:11:57","00:00:01","00:00:04","00:00:17","00:00:01","00:00:52","00:00:11","00:00:00","00:00:00","00:00:00","00:00:00","00:00:20","00:00:04","00:00:02","00:00:00","00:00:00","00:00:09","00:00:00","00:01:08","00:12:50","00:00:42","00:00:00","00:00:00","00:00:00","00:02:50","00:03:47","00:00:25","00:00:04","00:00:00","00:00:04","00:01:37","00:00:00","00:00:00","00:00:00","00:00:15","00:00:12","00:27:52","00:00:01","00:00:00","00:00:00","00:00:04","00:00:02","00:00:02","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:01","00:00:01","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:01","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:01:08","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:00","00:00:01","00:00:00","00:00:00","00:00:00"]}

